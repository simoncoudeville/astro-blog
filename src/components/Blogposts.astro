---
import formatDate from "../config";
import dayjs from "dayjs";

import { getCollection } from "astro:content";
const allPosts = (
  await getCollection("blog", ({ data }) => {
    return data.draft !== true;
  })
).sort(
  (a, b) =>
    new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf()
);
const { currentTitle } = Astro.props;
const numPosts = allPosts.length;
---

<h2>
  {numPosts} posts so far
</h2>
<ol reversed class="list-reset postlist readable flow-xs">
  {
    allPosts.map((post) => (
      <li class="postlist__item">
        <a
          href={`/blog/${post.slug}/`}
          class={
            currentTitle === post.data.title
              ? "postlist__link postlist__link--active"
              : "postlist__link"
          }
        >
          <time
            class="postlist__date text-date color-meta"
            datetime={post.data.pubDate}
          >
            {formatDate(post.data.pubDate)}
            <!--{dayjs(post.data.pubDate).format("MM.DD.YYYY")}-->
          </time>
          {post.data.title}
        </a>
      </li>
    ))
  }
</ol>

<style>
  .postlist {
    --postlist-whitespace: var(--global-whitespace-xs);
    --postlist-inline-whitespace: var(--global-whitespace-s);
  }

  .postlist__link {
    --link-color: var(--global-text-color);
    display: flex;
    gap: 0 var(--postlist-inline-whitespace);
    /* flex-direction: row; */
    /* flex-direction: column-reverse; */
    flex-direction: column;
    /* padding: calc(var(--postlist-whitespace) / 2) calc(var(--postlist-inline-whitespace) / 2); */
    /* padding: calc(var(--postlist-whitespace) / 2) 0; */
    /* margin: calc(var(--postlist-whitespace) / -2) calc(var(--postlist-inline-whitespace) / -2); */
    /* margin: calc(var(--postlist-whitespace) / -2) 0; */
    text-decoration: none;
    border-radius: var(--global-borderRadius-lg);
  }

  .postlist__date {
    flex-shrink: 0;
    justify-self: flex-end;
    text-decoration: none;
  }

  @media (min-width: 30em) {
    .postlist__link {
      flex-direction: row;
      align-items: center;
      justify-content: space-between;
    }

    /* .postlist__link::after {
      display: block;
      content: "";
      height: 1px;
      background-color: var(--global-borderColor);
      flex-grow: 1;
      order: 2;
    } */

    .postlist__date {
      order: 3;
    }
  }

  .postlist__item + .postlist__item {
    padding-top: var(--global-whitespace-xs);
    /* padding-top: var(--global-whitespace); */
    border-top: 1px solid var(--global-borderColor);
  }

  /* .postlist__link--active,
.postlist__link--active:hover {
    padding: calc(var(--postlist-whitespace) / 2) calc(var(--postlist-inline-whitespace) / 2);
    color: var(--global-text-color);
    text-decoration: none;
    background-color: var(--global-foregroundColor);
} */

  .postlist__link--active:any-link,
  .postlist__link:hover {
    /* color: var(--global-text-color); */
    /* text-decoration: none; */
    /* color: var(--global-accent-color) */
    /* background-color: var(--global-foregroundColor); */
    color: var(--global-meta-color);
  }
</style>
